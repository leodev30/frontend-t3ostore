{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\UET\\\\UI\\\\T3OFrontEnd\\\\T3O\\\\Screens\\\\Cart\\\\Checkout\\\\Confirm.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Text, Left, Right, ListItem, Thumbnail, Body } from 'native-base';\nimport { connect } from 'react-redux';\nimport * as actions from \"../../../Redux/Actions/cartActions\";\nimport Toast from \"react-native-toast-message\";\nimport axios from \"axios\";\nimport baseURL from \"../../../assets/common/baseUrl\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar Confirm = function Confirm(props) {\n  var finalOrder = props.route.params;\n\n  var confirmOrder = function confirmOrder() {\n    var order = finalOrder.order.order;\n    axios.post(baseURL + \"orders\", order).then(function (res) {\n      if (res.status == 200 || res.status == 201) {\n        Toast.show({\n          topOffset: 60,\n          type: \"success\",\n          text1: \"Order Completed\",\n          text2: \"\"\n        });\n        setTimeout(function () {\n          props.clearCart();\n          props.navigation.navigate(\"Cart\");\n        }, 500);\n      }\n    }).catch(function (error) {\n      Toast.show({\n        topOffset: 60,\n        type: \"error\",\n        text1: \"Something went wrong\",\n        text2: \"Please try again\"\n      });\n    });\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.titleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Confirm Order\"), props.route.params ? React.createElement(View, {\n    style: {\n      borderWidth: 1,\n      borderColor: 'orange'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"Shipping to:\"), React.createElement(View, {\n    style: {\n      padding: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"Address: \", finalOrder.order.order.shippingAddress1), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \"Address2: \", finalOrder.order.order.shippingAddress2), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"City: \", finalOrder.order.order.city), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"Zip Code: \", finalOrder.order.order.zip), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, \"Country: \", finalOrder.order.order.country)), React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Items:\"), finalOrder.order.order.orderItems.map(function (x) {\n    return React.createElement(ListItem, {\n      style: styles.listItem,\n      key: x.product.name,\n      avatar: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }, React.createElement(Left, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, React.createElement(Thumbnail, {\n      source: {\n        uri: x.product.image\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 37\n      }\n    })), React.createElement(Body, {\n      style: styles.body,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, React.createElement(Left, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 41\n      }\n    }, x.product.name)), React.createElement(Right, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 41\n      }\n    }, \"$ \", x.product.price))));\n  })) : null, React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      margin: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 12\n    }\n  }, React.createElement(Button, {\n    title: 'Place order',\n    onPress: confirmOrder,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }))));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    clearCart: function clearCart() {\n      return dispatch(actions.clearCart());\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    height: height,\n    padding: 8,\n    alignContent: 'center',\n    backgroundColor: 'white'\n  },\n  titleContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 8\n  },\n  title: {\n    alignSelf: 'center',\n    margin: 8,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  listItem: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    width: width / 1.2\n  },\n  body: {\n    margin: 10,\n    alignItems: 'center',\n    flexDirection: 'row'\n  }\n});\nexport default connect(null, mapDispatchToProps)(Confirm);","map":{"version":3,"sources":["E:/UET/UI/T3OFrontEnd/T3O/Screens/Cart/Checkout/Confirm.js"],"names":["React","Text","Left","Right","ListItem","Thumbnail","Body","connect","actions","Toast","axios","baseURL","Dimensions","get","width","height","Confirm","props","finalOrder","route","params","confirmOrder","order","post","then","res","status","show","topOffset","type","text1","text2","setTimeout","clearCart","navigation","navigate","catch","error","styles","container","titleContainer","fontSize","fontWeight","borderWidth","borderColor","title","padding","shippingAddress1","shippingAddress2","city","zip","country","orderItems","map","x","listItem","product","name","uri","image","body","price","alignItems","margin","mapDispatchToProps","dispatch","StyleSheet","create","alignContent","backgroundColor","justifyContent","alignSelf","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { View, StyleSheet, Dimensions, ScrollView, Button } from 'react-native'\r\nimport {\r\n    Text,\r\n    Left,\r\n    Right,\r\n    ListItem,\r\n    Thumbnail,\r\n    Body\r\n} from 'native-base'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../../Redux/Actions/cartActions'\r\n\r\nimport Toast from \"react-native-toast-message\"\r\nimport axios from \"axios\"\r\nimport baseURL from \"../../../assets/common/baseUrl\"\r\n\r\nvar { width, height } = Dimensions.get('window')\r\n\r\n\r\nconst Confirm = (props) => {\r\n\r\n    const finalOrder = props.route.params;\r\n\r\n    const confirmOrder = () => {\r\n\r\n        const order = finalOrder.order.order;\r\n\r\n        axios\r\n        .post(`${baseURL}orders`, order)\r\n        .then((res) => {\r\n            if (res.status == 200 || res.status == 201) {\r\n                Toast.show({\r\n                    topOffset: 60,\r\n                    type: \"success\",\r\n                    text1: \"Order Completed\",\r\n                    text2: \"\",\r\n                })\r\n                setTimeout(() => {\r\n                    props.clearCart();\r\n                    props.navigation.navigate(\"Cart\")\r\n                }, 500)\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            Toast.show({\r\n                topOffset: 60,\r\n                type: \"error\",\r\n                text1: \"Something went wrong\",\r\n                text2: \"Please try again\",\r\n            })\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    return(\r\n        <ScrollView contentContainerStyle={styles.container}>\r\n            <View style={styles.titleContainer}>\r\n                <Text style={{ fontSize: 20, fontWeight: 'bold'}}>\r\n                    Confirm Order\r\n                </Text>\r\n                {props.route.params ? \r\n                <View style={{ borderWidth: 1, borderColor: 'orange'}}>\r\n                    <Text style={styles.title}>Shipping to:</Text>\r\n                    <View style={{ padding: 8 }}>\r\n                        <Text>Address: {finalOrder.order.order.shippingAddress1}</Text>\r\n                        <Text>Address2: {finalOrder.order.order.shippingAddress2}</Text>\r\n                        <Text>City: {finalOrder.order.order.city}</Text>\r\n                        <Text>Zip Code: {finalOrder.order.order.zip}</Text>\r\n                        <Text>Country: {finalOrder.order.order.country}</Text>\r\n                    </View>\r\n                    <Text style={styles.title}>Items:</Text>\r\n                    {finalOrder.order.order.orderItems.map((x) => {\r\n                        return (\r\n                            <ListItem\r\n                                style={styles.listItem}\r\n                                key={x.product.name}\r\n                                avatar\r\n                            >\r\n                                <Left>\r\n                                    <Thumbnail source={{ uri: x.product.image}}/>\r\n                                </Left>\r\n                                <Body style={styles.body}>\r\n                                    <Left>\r\n                                        <Text>{x.product.name}</Text>\r\n                                    </Left>\r\n                                    <Right>\r\n                                        <Text>$ {x.product.price}</Text>\r\n                                    </Right>\r\n                                </Body>\r\n                            </ListItem>\r\n                        )\r\n                    })}\r\n                </View>    \r\n           : null }\r\n           <View style={{ alignItems: 'center', margin: 20 }}>\r\n                <Button title={'Place order'} onPress={confirmOrder}/>\r\n           </View>\r\n            </View>\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        clearCart: () => dispatch(actions.clearCart())\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        height: height,\r\n        padding: 8,\r\n        alignContent: 'center',\r\n        backgroundColor: 'white',\r\n    },\r\n    titleContainer: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        margin: 8,\r\n        \r\n    },\r\n    title: {\r\n        alignSelf: 'center', \r\n        margin: 8, \r\n        fontSize: 16,\r\n        fontWeight: 'bold' \r\n    },\r\n    listItem: {\r\n        alignItems: 'center',\r\n        backgroundColor: 'white',\r\n        justifyContent: 'center',\r\n        width: width / 1.2\r\n    },\r\n    body: {\r\n        margin: 10,\r\n        alignItems: 'center',\r\n        flexDirection: 'row'\r\n    }\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Confirm);"]},"metadata":{},"sourceType":"module"}