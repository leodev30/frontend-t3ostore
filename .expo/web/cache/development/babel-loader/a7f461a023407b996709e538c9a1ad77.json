{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\UET\\\\UI\\\\T3OFrontEnd\\\\T3O\\\\Screens\\\\Cart\\\\Checkout\\\\Checkout.js\";\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FormContainer from \"../../Form/FormContainer\";\nimport Input from \"../../Form/Input\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { connect } from 'react-redux';\n\nvar Checkout = function Checkout(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      orderItems = _useState2[0],\n      setOrderItems = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      address = _useState4[0],\n      setAddress = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      address2 = _useState6[0],\n      setAddress2 = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      city = _useState8[0],\n      setCity = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      phone = _useState10[0],\n      setPhone = _useState10[1];\n\n  useEffect(function () {\n    setOrderItems(props.cartItems);\n    return function () {\n      setOrderItems();\n    };\n  }, []);\n\n  var checkOut = function checkOut() {\n    var order = {\n      city: city,\n      dateOrdered: Date.now(),\n      orderItems: orderItems,\n      phone: phone,\n      shippingAddress1: address,\n      shippingAddress2: address2\n    };\n    props.navigation.navigate(\"Thanh toán\", {\n      order: order\n    });\n  };\n\n  return React.createElement(KeyboardAwareScrollView, {\n    viewIsInsideTabBar: true,\n    extraHeight: 200,\n    enableOnAndroid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(FormContainer, {\n    title: \"Địa chỉ giao hàng\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Số điện thoại\",\n    name: \"phone\",\n    value: phone,\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(text) {\n      return setPhone(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Địa chỉ giao hàng 1\",\n    name: \"ShippingAddress1\",\n    value: address,\n    onChangeText: function onChangeText(text) {\n      return setAddress(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 20\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Địa chỉ giao hàng 2\",\n    name: \"ShippingAddress2\",\n    value: address2,\n    onChangeText: function onChangeText(text) {\n      return setAddress2(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 20\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Thành phố\",\n    name: \"city\",\n    value: city,\n    onChangeText: function onChangeText(text) {\n      return setCity(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 20\n    }\n  }), React.createElement(View, {\n    style: {\n      width: '80%',\n      alignItems: \"center\",\n      marginTop: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"X\\xE1c nh\\u1EADn\",\n    onPress: function onPress() {\n      return checkOut();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var cartItems = state.cartItems;\n  return {\n    cartItems: cartItems\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);","map":{"version":3,"sources":["E:/UET/UI/T3OFrontEnd/T3O/Screens/Cart/Checkout/Checkout.js"],"names":["React","useEffect","useState","useContext","FormContainer","Input","KeyboardAwareScrollView","connect","Checkout","props","orderItems","setOrderItems","address","setAddress","address2","setAddress2","city","setCity","phone","setPhone","cartItems","checkOut","order","dateOrdered","Date","now","shippingAddress1","shippingAddress2","navigation","navigate","text","width","alignItems","marginTop","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext} from 'react'\r\nimport { View, Button } from 'react-native'\r\nimport FormContainer from '../../Form/FormContainer'\r\nimport Input from '../../Form/Input'\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nconst Checkout = (props) => {\r\n    const [ orderItems, setOrderItems ] = useState();\r\n    const [ address, setAddress ] = useState();\r\n    const [ address2, setAddress2 ] = useState();\r\n    const [ city, setCity ] = useState();\r\n    const [ phone, setPhone ] = useState();\r\n\r\n    useEffect(() => {\r\n        setOrderItems(props.cartItems)\r\n\r\n        return () => {\r\n            setOrderItems();\r\n        }\r\n    }, [])\r\n\r\n    const checkOut = () => {\r\n        let order = {\r\n            city,\r\n            dateOrdered: Date.now(),\r\n            orderItems,\r\n            phone,\r\n            shippingAddress1: address,\r\n            shippingAddress2: address2,\r\n        }\r\n\r\n        props.navigation.navigate(\"Thanh toán\", {order: order })\r\n    }\r\n\r\n    return (\r\n        <KeyboardAwareScrollView\r\n            viewIsInsideTabBar={true}\r\n            extraHeight={200}\r\n            enableOnAndroid={true}\r\n        >\r\n            <FormContainer title={\"Địa chỉ giao hàng\"}>\r\n                <Input\r\n                    placeholder={\"Số điện thoại\"}\r\n                    name={\"phone\"}\r\n                    value={phone}\r\n                    keyboardType={\"numeric\"}\r\n                    onChangeText={(text) => setPhone(text)}\r\n                />\r\n                   <Input\r\n                    placeholder={\"Địa chỉ giao hàng 1\"}\r\n                    name={\"ShippingAddress1\"}\r\n                    value={address}\r\n                    onChangeText={(text) => setAddress(text)}\r\n                />\r\n                   <Input\r\n                    placeholder={\"Địa chỉ giao hàng 2\"}\r\n                    name={\"ShippingAddress2\"}\r\n                    value={address2}\r\n                    onChangeText={(text) => setAddress2(text)}\r\n                />\r\n                   <Input\r\n                    placeholder={\"Thành phố\"}\r\n                    name={\"city\"}\r\n                    value={city}\r\n                    onChangeText={(text) => setCity(text)}\r\n                />\r\n                <View style={{ width: '80%', alignItems: \"center\", marginTop:40 }}>\r\n                    <Button title=\"Xác nhận\" onPress={() => checkOut()}/>\r\n                </View>\r\n            </FormContainer>\r\n        </KeyboardAwareScrollView>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { cartItems } = state;\r\n    return {\r\n        cartItems: cartItems,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout)"]},"metadata":{},"sourceType":"module"}