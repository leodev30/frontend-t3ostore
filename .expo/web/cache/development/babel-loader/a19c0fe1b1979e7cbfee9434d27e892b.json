{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\UET\\\\UI\\\\T3OFrontEnd\\\\T3O\\\\Screens\\\\Cart\\\\Checkout\\\\Checkout.js\";\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Item, Picker, Toast } from 'native-base';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport FormContainer from \"../../../Shared/Form/FormContainer\";\nimport Input from \"../../../Shared/Form/Input\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport AuthGlobal from \"../../../Context/store/AuthGlobal\";\nimport { connect } from 'react-redux';\n\nvar countries = require(\"../../../assets/countries.json\");\n\nvar Checkout = function Checkout(props) {\n  var context = useContext(AuthGlobal);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      orderItems = _useState2[0],\n      setOrderItems = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      address = _useState4[0],\n      setAddress = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      address2 = _useState6[0],\n      setAddress2 = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      city = _useState8[0],\n      setCity = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      zip = _useState10[0],\n      setZip = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      country = _useState12[0],\n      setCountry = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      phone = _useState14[0],\n      setPhone = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      user = _useState16[0],\n      setUser = _useState16[1];\n\n  useEffect(function () {\n    setOrderItems(props.cartItems);\n\n    if (context.stateUser.isAuthenticated) {\n      setUser(context.stateUser.user.sub);\n    } else {\n      props.navigation.navigate(\"Cart\");\n      Toast.show({\n        topOffset: 60,\n        type: \"error\",\n        text1: \"Please Login to Checkout\",\n        text2: \"\"\n      });\n    }\n\n    return function () {\n      setOrderItems();\n    };\n  }, []);\n\n  var checkOut = function checkOut() {\n    var order = {\n      city: city,\n      country: country,\n      dateOrdered: Date.now(),\n      orderItems: orderItems,\n      phone: phone,\n      shippingAddress1: address,\n      shippingAddress2: address2,\n      status: \"3\",\n      user: user,\n      zip: zip\n    };\n    props.navigation.navigate(\"Payment\", {\n      order: order\n    });\n  };\n\n  return React.createElement(KeyboardAwareScrollView, {\n    viewIsInsideTabBar: true,\n    extraHeight: 200,\n    enableOnAndroid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(FormContainer, {\n    title: \"Shipping Address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Phone\",\n    name: \"phone\",\n    value: phone,\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(text) {\n      return setPhone(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Shipping Address 1\",\n    name: \"ShippingAddress1\",\n    value: address,\n    onChangeText: function onChangeText(text) {\n      return setAddress(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 20\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Shipping Address 2\",\n    name: \"ShippingAddress2\",\n    value: address2,\n    onChangeText: function onChangeText(text) {\n      return setAddress2(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 20\n    }\n  }), React.createElement(Input, {\n    placeholder: \"City\",\n    name: \"city\",\n    value: city,\n    onChangeText: function onChangeText(text) {\n      return setCity(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 20\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Zip Code\",\n    name: \"zip\",\n    value: zip,\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(text) {\n      return setZip(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 20\n    }\n  }), React.createElement(Item, {\n    picker: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, React.createElement(Picker, {\n    mode: \"dropdown\",\n    iosIcon: React.createElement(Icon, {\n      name: \"arrow-down\",\n      color: \"#007aff\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 34\n      }\n    }),\n    style: {\n      width: undefined\n    },\n    selectedValue: country,\n    placeholder: \"Select your country\",\n    placeholderStyle: {\n      color: '#007aff'\n    },\n    placeholderIconColor: \"#007aff\",\n    onValueChange: function onValueChange(e) {\n      return setCountry(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, countries.map(function (c) {\n    return React.createElement(Picker.Item, {\n      key: c.code,\n      label: c.name,\n      value: c.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 36\n      }\n    });\n  }))), React.createElement(View, {\n    style: {\n      width: '80%',\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm\",\n    onPress: function onPress() {\n      return checkOut();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var cartItems = state.cartItems;\n  return {\n    cartItems: cartItems\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);","map":{"version":3,"sources":["E:/UET/UI/T3OFrontEnd/T3O/Screens/Cart/Checkout/Checkout.js"],"names":["React","useEffect","useState","useContext","Item","Picker","Toast","Icon","FormContainer","Input","KeyboardAwareScrollView","AuthGlobal","connect","countries","require","Checkout","props","context","orderItems","setOrderItems","address","setAddress","address2","setAddress2","city","setCity","zip","setZip","country","setCountry","phone","setPhone","user","setUser","cartItems","stateUser","isAuthenticated","sub","navigation","navigate","show","topOffset","type","text1","text2","checkOut","order","dateOrdered","Date","now","shippingAddress1","shippingAddress2","status","text","width","undefined","color","e","map","c","code","name","alignItems","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext} from 'react'\r\nimport { Text, View, Button } from 'react-native'\r\nimport { Item, Picker, Toast } from 'native-base'\r\nimport Icon from 'react-native-vector-icons/FontAwesome'\r\nimport FormContainer from '../../../Shared/Form/FormContainer'\r\nimport Input from '../../../Shared/Form/Input'\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\nimport AuthGlobal from \"../../../Context/store/AuthGlobal\"\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nconst countries = require(\"../../../assets/countries.json\");\r\n\r\nconst Checkout = (props) => {\r\n    const context = useContext(AuthGlobal)\r\n\r\n    const [ orderItems, setOrderItems ] = useState();\r\n    const [ address, setAddress ] = useState();\r\n    const [ address2, setAddress2 ] = useState();\r\n    const [ city, setCity ] = useState();\r\n    const [ zip, setZip ] = useState();\r\n    const [ country, setCountry ] = useState();\r\n    const [ phone, setPhone ] = useState();\r\n    const [ user, setUser ] = useState();\r\n\r\n    useEffect(() => {\r\n        setOrderItems(props.cartItems)\r\n\r\n        if(context.stateUser.isAuthenticated) {\r\n            setUser(context.stateUser.user.sub)\r\n        } else {\r\n            props.navigation.navigate(\"Cart\");\r\n            Toast.show({\r\n                topOffset: 60,\r\n                type: \"error\",\r\n                text1: \"Please Login to Checkout\",\r\n                text2: \"\"\r\n            });\r\n        }\r\n\r\n        return () => {\r\n            setOrderItems();\r\n        }\r\n    }, [])\r\n\r\n    const checkOut = () => {\r\n        let order = {\r\n            city,\r\n            country,\r\n            dateOrdered: Date.now(),\r\n            orderItems,\r\n            phone,\r\n            shippingAddress1: address,\r\n            shippingAddress2: address2,\r\n            status: \"3\",\r\n            user,\r\n            zip,\r\n        }\r\n\r\n        props.navigation.navigate(\"Payment\", {order: order })\r\n    }\r\n\r\n    return (\r\n        <KeyboardAwareScrollView\r\n            viewIsInsideTabBar={true}\r\n            extraHeight={200}\r\n            enableOnAndroid={true}\r\n        >\r\n            <FormContainer title={\"Shipping Address\"}>\r\n                <Input\r\n                    placeholder={\"Phone\"}\r\n                    name={\"phone\"}\r\n                    value={phone}\r\n                    keyboardType={\"numeric\"}\r\n                    onChangeText={(text) => setPhone(text)}\r\n                />\r\n                   <Input\r\n                    placeholder={\"Shipping Address 1\"}\r\n                    name={\"ShippingAddress1\"}\r\n                    value={address}\r\n                    onChangeText={(text) => setAddress(text)}\r\n                />\r\n                   <Input\r\n                    placeholder={\"Shipping Address 2\"}\r\n                    name={\"ShippingAddress2\"}\r\n                    value={address2}\r\n                    onChangeText={(text) => setAddress2(text)}\r\n                />\r\n                   <Input\r\n                    placeholder={\"City\"}\r\n                    name={\"city\"}\r\n                    value={city}\r\n                    onChangeText={(text) => setCity(text)}\r\n                />\r\n                   <Input\r\n                    placeholder={\"Zip Code\"}\r\n                    name={\"zip\"}\r\n                    value={zip}\r\n                    keyboardType={\"numeric\"}\r\n                    onChangeText={(text) => setZip(text)}\r\n                />\r\n                <Item picker>\r\n                    <Picker\r\n                        mode=\"dropdown\"\r\n                        iosIcon={<Icon name=\"arrow-down\" color={\"#007aff\"} />}\r\n                        style={{ width: undefined }}\r\n                        selectedValue={country}\r\n                        placeholder=\"Select your country\"\r\n                        placeholderStyle={{ color: '#007aff' }}\r\n                        placeholderIconColor=\"#007aff\"\r\n                        onValueChange={(e) => setCountry(e)}\r\n                    >\r\n                        {countries.map((c) => {\r\n                            return <Picker.Item \r\n                                    key={c.code} \r\n                                    label={c.name}\r\n                                    value={c.name}\r\n                                    />\r\n                        })}\r\n                    </Picker>\r\n                </Item>\r\n                <View style={{ width: '80%', alignItems: \"center\" }}>\r\n                    <Button title=\"Confirm\" onPress={() => checkOut()}/>\r\n                </View>\r\n            </FormContainer>\r\n        </KeyboardAwareScrollView>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { cartItems } = state;\r\n    return {\r\n        cartItems: cartItems,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout)"]},"metadata":{},"sourceType":"module"}