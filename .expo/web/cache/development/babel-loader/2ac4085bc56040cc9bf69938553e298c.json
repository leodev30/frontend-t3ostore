{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\UET\\\\UI\\\\T3OFrontEnd\\\\T3O\\\\Screens\\\\Cart\\\\Cart.js\";\n\nimport React, { useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Container, Text, Left, Right, H1 } from \"native-base\";\nimport { SwipeListView } from 'react-native-swipe-list-view';\nimport CartItem from \"./CartItem\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../Redux/Actions/cartActions\";\nimport AuthGlobal from \"../../Context/store/AuthGlobal\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar Cart = function Cart(props) {\n  var context = useContext(AuthGlobal);\n  var total = 0;\n  props.cartItems.forEach(function (cart) {\n    return total += cart.product.price;\n  });\n  return React.createElement(React.Fragment, null, props.cartItems.length ? React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(H1, {\n    style: {\n      alignSelf: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Cart\"), React.createElement(SwipeListView, {\n    data: props.cartItems,\n    renderItem: function renderItem(data) {\n      return React.createElement(CartItem, {\n        item: data,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }\n      });\n    },\n    renderHiddenItem: function renderHiddenItem(data) {\n      return React.createElement(View, {\n        style: styles.hiddenContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.hiddenButton,\n        onPress: function onPress() {\n          return props.removeFromCart(data.item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, React.createElement(Icon, {\n        name: \"trash\",\n        color: \"white\",\n        size: 30,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }\n      })));\n    },\n    disableRightSwipe: true,\n    previewOpenDelay: 3000,\n    friction: 1000,\n    tension: 40,\n    leftOpenValue: 75,\n    stopLeftSwipe: 75,\n    rightOpenValue: -75,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.bottomContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, React.createElement(Left, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.price,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"$ \", total)), React.createElement(Right, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, React.createElement(EasyButton, {\n    danger: true,\n    medium: true,\n    onPress: function onPress() {\n      return props.clearCart();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, \"Clear\"))), React.createElement(Right, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, context.stateUser.isAuthenticated ? React.createElement(EasyButton, {\n    primary: true,\n    medium: true,\n    onPress: function onPress() {\n      return props.navigation.navigate('Checkout');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Checkout\")) : React.createElement(EasyButton, {\n    secondary: true,\n    medium: true,\n    onPress: function onPress() {\n      return props.navigation.navigate('Login');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Login\"))))) : React.createElement(Container, {\n    style: styles.emptyContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Looks like your cart is empty\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Add products to your cart to get started\")));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var cartItems = state.cartItems;\n  return {\n    cartItems: cartItems\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    clearCart: function clearCart() {\n      return dispatch(actions.clearCart());\n    },\n    removeFromCart: function removeFromCart(item) {\n      return dispatch(actions.removeFromCart(item));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  emptyContainer: {\n    height: height,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  bottomContainer: {\n    flexDirection: 'row',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    backgroundColor: 'white',\n    elevation: 20\n  },\n  price: {\n    fontSize: 18,\n    margin: 20,\n    color: 'red'\n  },\n  hiddenContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    flexDirection: 'row'\n  },\n  hiddenButton: {\n    backgroundColor: 'red',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    paddingRight: 25,\n    height: 70,\n    width: width / 1.2\n  }\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["E:/UET/UI/T3OFrontEnd/T3O/Screens/Cart/Cart.js"],"names":["React","useContext","Container","Text","Left","Right","H1","SwipeListView","CartItem","Icon","EasyButton","connect","actions","AuthGlobal","Dimensions","get","height","width","Cart","props","context","total","cartItems","forEach","cart","product","price","length","alignSelf","data","styles","hiddenContainer","hiddenButton","removeFromCart","item","bottomContainer","clearCart","color","stateUser","isAuthenticated","navigation","navigate","emptyContainer","mapStateToProps","state","mapDispatchToProps","dispatch","StyleSheet","create","alignItems","justifyContent","flexDirection","position","bottom","left","backgroundColor","elevation","fontSize","margin","flex","paddingRight"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport {\r\n  View,\r\n  Dimensions,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport {\r\n  Container,\r\n  Text,\r\n  Left,\r\n  Right,\r\n  H1\r\n} from \"native-base\";\r\nimport { SwipeListView } from 'react-native-swipe-list-view'\r\nimport CartItem from './CartItem'\r\n\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\"\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../Redux/Actions/cartActions\";\r\nimport AuthGlobal from \"../../Context/store/AuthGlobal\"\r\n\r\nvar { height, width } = Dimensions.get(\"window\");\r\n\r\nconst Cart = (props) => {\r\n\r\n  const context = useContext(AuthGlobal);\r\n\r\n    var total = 0;\r\n    props.cartItems.forEach(cart => {\r\n        return (total += cart.product.price)\r\n    });\r\n\r\n  return (\r\n    <>\r\n      {props.cartItems.length ? (\r\n        <Container>\r\n          <H1 style={{ alignSelf: \"center\" }}>Cart</H1>\r\n          <SwipeListView\r\n            data={props.cartItems}\r\n            renderItem={(data) => (\r\n             <CartItem item={data} />\r\n            )}\r\n            renderHiddenItem={(data) => (\r\n              <View style={styles.hiddenContainer}>\r\n                <TouchableOpacity \r\n                style={styles.hiddenButton}\r\n                onPress={() => props.removeFromCart(data.item)}\r\n                >\r\n                  <Icon name=\"trash\" color={\"white\"} size={30} />\r\n                </TouchableOpacity>\r\n              </View>\r\n            )}\r\n            disableRightSwipe={true}\r\n            previewOpenDelay={3000}\r\n            friction={1000}\r\n            tension={40}\r\n            leftOpenValue={75}\r\n            stopLeftSwipe={75}\r\n            rightOpenValue={-75}\r\n          />\r\n          <View style={styles.bottomContainer}>\r\n            <Left>\r\n                <Text style={styles.price}>$ {total}</Text>\r\n            </Left>\r\n            <Right>\r\n                <EasyButton\r\n                  danger\r\n                  medium\r\n                  onPress={() => props.clearCart()}\r\n                >\r\n                  <Text style={{ color: 'white' }}>Clear</Text>\r\n                </EasyButton>\r\n            </Right>\r\n            <Right>\r\n              {context.stateUser.isAuthenticated ? (\r\n                <EasyButton\r\n                  primary\r\n                  medium\r\n                  onPress={() => props.navigation.navigate('Checkout')}\r\n                >\r\n                <Text style={{ color: 'white' }}>Checkout</Text>\r\n                </EasyButton>\r\n              ) : (\r\n                <EasyButton\r\n                  secondary\r\n                  medium\r\n                  onPress={() => props.navigation.navigate('Login')}\r\n                >\r\n                <Text style={{ color: 'white' }}>Login</Text>\r\n                </EasyButton>\r\n              )}\r\n                \r\n            </Right>\r\n          </View>\r\n        </Container>\r\n      ) : (\r\n        <Container style={styles.emptyContainer}>\r\n          <Text>Looks like your cart is empty</Text>\r\n          <Text>Add products to your cart to get started</Text>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { cartItems } = state;\r\n  return {\r\n    cartItems: cartItems,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    clearCart: () => dispatch(actions.clearCart()),\r\n    removeFromCart: (item) => dispatch(actions.removeFromCart(item))\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  emptyContainer: {\r\n    height: height,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  bottomContainer: {\r\n      flexDirection: 'row',\r\n      position: 'absolute',\r\n      bottom: 0,\r\n      left: 0,\r\n      backgroundColor: 'white',\r\n      elevation: 20\r\n  },\r\n  price: {\r\n      fontSize: 18,\r\n      margin: 20,\r\n      color: 'red'\r\n  },\r\n  hiddenContainer: {\r\n    flex: 1,\r\n    justifyContent: 'flex-end',\r\n    flexDirection: 'row'\r\n  },\r\n  hiddenButton: {\r\n    backgroundColor: 'red',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n    paddingRight: 25,\r\n    height: 70,\r\n    width: width / 1.2\r\n  }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);"]},"metadata":{},"sourceType":"module"}