{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\UET\\\\UI\\\\T3OFrontEnd\\\\T3O\\\\node_modules\\\\react-native-marquee\\\\index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nvar UIManager = NativeModules.UIManager;\n\nvar MarqueeText = function (_PureComponent) {\n  _inherits(MarqueeText, _PureComponent);\n\n  var _super = _createSuper(MarqueeText);\n\n  function MarqueeText(props) {\n    var _this;\n\n    _classCallCheck(this, MarqueeText);\n\n    _this = _super.call(this, props);\n    _this.animatedValue = new Animated.Value(0);\n    _this.contentFits = false;\n    _this.distance = null;\n    _this.textRef = null;\n    _this.containerRef = null;\n    _this.state = {\n      animating: false\n    };\n\n    _this.invalidateMetrics();\n\n    return _this;\n  }\n\n  _createClass(MarqueeText, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var marqueeDelay = this.props.marqueeDelay;\n\n      if (this.props.marqueeOnStart) {\n        this.startAnimation(marqueeDelay);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.children !== nextProps.children) {\n        this.invalidateMetrics();\n        this.resetAnimation();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.animating) {\n        this.stopAnimation();\n      }\n\n      this.clearTimeout();\n    }\n  }, {\n    key: \"startAnimation\",\n    value: function startAnimation(timeDelay) {\n      if (this.state.animating) {\n        return;\n      }\n\n      this.start(timeDelay);\n    }\n  }, {\n    key: \"stopAnimation\",\n    value: function stopAnimation() {\n      this.stop();\n    }\n  }, {\n    key: \"resetAnimation\",\n    value: function resetAnimation() {\n      var _this2 = this;\n\n      var marqueeDelay = this.props.marqueeDelay;\n      var marqueeResetDelay = Math.max(100, this.props.marqueeResetDelay);\n      this.setTimeout(function () {\n        _this2.animatedValue.setValue(0);\n\n        _this2.setState({\n          animating: false\n        }, function () {\n          _this2.startAnimation(marqueeDelay);\n        });\n      }, marqueeResetDelay);\n    }\n  }, {\n    key: \"start\",\n    value: function start(timeDelay) {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          duration = _this$props.duration,\n          easing = _this$props.easing,\n          loop = _this$props.loop,\n          onMarqueeComplete = _this$props.onMarqueeComplete,\n          useNativeDriver = _this$props.useNativeDriver;\n\n      var callback = function callback() {\n        _this3.setState({\n          animating: true\n        });\n\n        _this3.setTimeout(function () {\n          _this3.calculateMetrics();\n\n          if (!_this3.contentFits) {\n            Animated.timing(_this3.animatedValue, {\n              toValue: -_this3.distance,\n              duration: duration,\n              easing: easing,\n              useNativeDriver: useNativeDriver\n            }).start(function (_ref) {\n              var finished = _ref.finished;\n\n              if (finished) {\n                if (loop) {\n                  _this3.resetAnimation();\n                } else {\n                  _this3.stop();\n\n                  onMarqueeComplete();\n                }\n              }\n            });\n          }\n        }, 100);\n      };\n\n      this.setTimeout(callback, timeDelay);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.animatedValue.setValue(0);\n      this.setState({\n        animating: false\n      });\n    }\n  }, {\n    key: \"shouldAnimate\",\n    value: function shouldAnimate(distance) {\n      return distance > 0;\n    }\n  }, {\n    key: \"calculateMetrics\",\n    value: function calculateMetrics() {\n      var measureWidth, _await$Promise$all, _await$Promise$all2, containerWidth, textWidth;\n\n      return _regeneratorRuntime.async(function calculateMetrics$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              measureWidth = function measureWidth(node) {\n                return new Promise(function (resolve) {\n                  UIManager.measure(findNodeHandle(node), function (x, y, w) {\n                    return resolve(w);\n                  });\n                });\n              };\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(Promise.all([measureWidth(this.containerRef), measureWidth(this.textRef)]));\n\n            case 4:\n              _await$Promise$all = _context.sent;\n              _await$Promise$all2 = _slicedToArray(_await$Promise$all, 2);\n              containerWidth = _await$Promise$all2[0];\n              textWidth = _await$Promise$all2[1];\n              this.distance = textWidth - containerWidth;\n              this.contentFits = !this.shouldAnimate(this.distance);\n              return _context.abrupt(\"return\", []);\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.warn(_context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 13]], Promise);\n    }\n  }, {\n    key: \"invalidateMetrics\",\n    value: function invalidateMetrics() {\n      this.distance = null;\n      this.contentFits = false;\n    }\n  }, {\n    key: \"clearTimeout\",\n    value: function (_clearTimeout) {\n      function clearTimeout() {\n        return _clearTimeout.apply(this, arguments);\n      }\n\n      clearTimeout.toString = function () {\n        return _clearTimeout.toString();\n      };\n\n      return clearTimeout;\n    }(function () {\n      if (this.timer) {\n        clearTimeout(this.timer);\n        this.timer = null;\n      }\n    })\n  }, {\n    key: \"setTimeout\",\n    value: function (_setTimeout) {\n      function setTimeout(_x) {\n        return _setTimeout.apply(this, arguments);\n      }\n\n      setTimeout.toString = function () {\n        return _setTimeout.toString();\n      };\n\n      return setTimeout;\n    }(function (fn) {\n      var time = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      this.clearTimeout();\n      this.timer = setTimeout(fn, time);\n    })\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          style = _this$props2.style,\n          rest = _objectWithoutProperties(_this$props2, [\"children\", \"style\"]);\n\n      var animating = this.state.animating;\n\n      var _StyleSheet$flatten = StyleSheet.flatten(style),\n          width = _StyleSheet$flatten.width,\n          height = _StyleSheet$flatten.height;\n\n      return React.createElement(View, {\n        style: [styles.container, {\n          width: width,\n          height: height\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, _extends({\n        numberOfLines: 1\n      }, rest, {\n        style: [style, {\n          opacity: animating ? 0 : 1\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 9\n        }\n      }), children), React.createElement(ScrollView, {\n        ref: function ref(c) {\n          return _this4.containerRef = c;\n        },\n        style: StyleSheet.absoluteFillObject,\n        display: animating ? 'flex' : 'none',\n        showsHorizontalScrollIndicator: false,\n        horizontal: true,\n        scrollEnabled: false,\n        onContentSizeChange: function onContentSizeChange() {\n          return _this4.calculateMetrics();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.Text, _extends({\n        ref: function ref(c) {\n          return _this4.textRef = c;\n        },\n        numberOfLines: 1\n      }, rest, {\n        style: [style, {\n          transform: [{\n            translateX: this.animatedValue\n          }],\n          width: null\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }\n      }), children)));\n    }\n  }]);\n\n  return MarqueeText;\n}(PureComponent);\n\nMarqueeText.defaultProps = {\n  style: {},\n  duration: 3000,\n  easing: Easing.inOut(Easing.ease),\n  loop: false,\n  marqueeOnStart: false,\n  marqueeDelay: 0,\n  marqueeResetDelay: 0,\n  onMarqueeComplete: function onMarqueeComplete() {},\n  useNativeDriver: true\n};\nexport { MarqueeText as default };\nvar styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"sources":["E:/UET/UI/T3OFrontEnd/T3O/node_modules/react-native-marquee/index.js"],"names":["React","PureComponent","UIManager","NativeModules","MarqueeText","props","animatedValue","Animated","Value","contentFits","distance","textRef","containerRef","state","animating","invalidateMetrics","marqueeDelay","marqueeOnStart","startAnimation","nextProps","children","resetAnimation","stopAnimation","clearTimeout","timeDelay","start","stop","marqueeResetDelay","Math","max","setTimeout","setValue","setState","duration","easing","loop","onMarqueeComplete","useNativeDriver","callback","calculateMetrics","timing","toValue","finished","measureWidth","node","Promise","resolve","measure","findNodeHandle","x","y","w","all","containerWidth","textWidth","shouldAnimate","console","warn","timer","fn","time","style","rest","StyleSheet","flatten","width","height","styles","container","opacity","c","absoluteFillObject","transform","translateX","defaultProps","Easing","inOut","ease","create","overflow"],"mappings":"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","sourcesContent":["/**\n * @flow\n */\nimport React, { PureComponent } from 'react';\nimport {\n  StyleSheet,\n  Animated,\n  Easing,\n  Text,\n  View,\n  ScrollView,\n  NativeModules,\n  findNodeHandle,\n} from 'react-native';\nimport type { StyleObj } from '../../node_modules/react-native/Libraries/StyleSheet/StyleSheetTypes';\n\nconst { UIManager } = NativeModules;\n\ntype Props = {\n  /**\n   * style\n   */\n  style?: StyleObj,\n  /**\n   * Number of milliseconds until animation finishes from start.\n   */\n  duration?: number,\n  /**\n   * Easing function to define animation curve.\n   */\n  easing?: Function,\n  /**\n   * Set this true when animation repeats.\n   */\n  loop?: boolean,\n  /**\n   * Set this true while waiting for new data from a refresh.\n   */\n  marqueeOnStart?: boolean,\n  /**\n   * Number of milliseconds to wait before resetting the marquee position after it finishes.\n   */\n  marqueeResetDelay?: number,\n  /**\n   * Number of milliseconds to wait before starting or restarting marquee.\n   */\n  marqueeDelay?: number,\n  /**\n   * Callback function for when the marquee completes its animation\n   */\n  onMarqueeComplete?: Function,\n  /**\n   * Text passed\n   */\n  children: string,\n  /**\n   * Set this truen if you want to use native driver\n   */\n  useNativeDriver?: boolean,\n};\n\ntype DefaultProps = {\n  style: StyleObj,\n  duration: number,\n  easing: Function,\n  loop: boolean,\n  marqueeOnStart: boolean,\n  marqueeResetDelay: number,\n  marqueeDelay: number,\n  onMarqueeComplete: Function,\n};\n\ntype State = {\n  animating: boolean,\n};\n\nexport default class MarqueeText extends PureComponent<DefaultProps, Props, State> {\n  props: Props;\n  state: State;\n\n  distance: ?number;\n  contentFits: boolean;\n  animatedValue: Object;\n  textRef: ?Text;\n  containerRef: ?ScrollView;\n  timer: ?number;\n\n  static defaultProps = {\n    style: {},\n    duration: 3000,\n    easing: Easing.inOut(Easing.ease),\n    loop: false,\n    marqueeOnStart: false,\n    marqueeDelay: 0,\n    marqueeResetDelay: 0,\n    onMarqueeComplete: () => {},\n    useNativeDriver: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    this.animatedValue = new Animated.Value(0);\n    this.contentFits = false;\n    this.distance = null;\n    this.textRef = null;\n    this.containerRef = null;\n\n    this.state = {\n      animating: false,\n    };\n\n    this.invalidateMetrics();\n  }\n\n  componentDidMount() {\n    const { marqueeDelay } = this.props;\n    if (this.props.marqueeOnStart) {\n      this.startAnimation(marqueeDelay);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (this.props.children !== nextProps.children) {\n      this.invalidateMetrics();\n      this.resetAnimation();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.animating) {\n      this.stopAnimation();\n    }\n    this.clearTimeout();\n  }\n\n  startAnimation(timeDelay: number) {\n    if (this.state.animating) {\n      return;\n    }\n\n    this.start(timeDelay);\n  }\n\n  stopAnimation() {\n    this.stop();\n  }\n\n  /**\n   * Resets the marquee and restarts it after `marqueeDelay` millisecons.\n   */\n  resetAnimation() {\n    const { marqueeDelay } = this.props\n    const marqueeResetDelay = Math.max(100, this.props.marqueeResetDelay);\n    this.setTimeout(() => {\n      this.animatedValue.setValue(0);\n      this.setState({ animating: false }, () => {\n        this.startAnimation(marqueeDelay)\n      });\n    }, marqueeResetDelay)\n  }\n\n  start(timeDelay: number) {\n    const { duration, easing, loop, onMarqueeComplete, useNativeDriver } = this.props;\n\n    const callback = () => {\n      this.setState({ animating: true });\n\n      this.setTimeout(() => {\n        this.calculateMetrics();\n\n        if (!this.contentFits) {\n          Animated.timing(this.animatedValue, {\n            toValue: -this.distance,\n            duration: duration,\n            easing: easing,\n            useNativeDriver,\n          }).start(({ finished }) => {\n            if (finished) {\n              if (loop) {\n                this.resetAnimation();\n              } else {\n                this.stop();\n                onMarqueeComplete();\n              }\n            }\n          });\n        }\n      }, 100);\n    };\n\n    this.setTimeout(callback, timeDelay);\n  }\n\n  stop() {\n    this.animatedValue.setValue(0);\n    this.setState({ animating: false });\n  }\n\n  shouldAnimate(distance: number) {\n    return distance > 0;\n  }\n\n  async calculateMetrics() {\n    try {\n      const measureWidth = node =>\n        new Promise(resolve => {\n          UIManager.measure(findNodeHandle(node), (x, y, w) => {\n            // console.log('Width: ' + w);\n            return resolve(w);\n          });\n        });\n\n      const [containerWidth, textWidth] = await Promise.all([\n        measureWidth(this.containerRef),\n        measureWidth(this.textRef),\n      ]);\n\n      this.distance = textWidth - containerWidth;\n      this.contentFits = !this.shouldAnimate(this.distance);\n\n      return [];\n      // console.log(`distance: ${this.distance}, contentFits: ${this.contentFits}`);\n    } catch (error) {\n      console.warn(error);\n    }\n  }\n\n  invalidateMetrics() {\n    // Null distance is the special value to allow recalculation\n    this.distance = null;\n    // Assume the marquee does not fit until calculations show otherwise\n    this.contentFits = false;\n  }\n\n  /**\n   * Clears the timer\n   */\n  clearTimeout() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n      this.timer = null;\n      // console.log(\"Currently running timeout is cleared!!!\");\n    }\n  }\n\n  /**\n   * Starts a new timer\n    */\n  setTimeout(fn: Function, time: number = 0) {\n    this.clearTimeout();\n    this.timer = setTimeout(fn, time);\n  }\n\n  render() {\n    const { children, style, ...rest } = this.props;\n    const { animating } = this.state;\n    const { width, height } = StyleSheet.flatten(style);\n\n    return (\n      <View style={[styles.container, { width, height }]}>\n        <Text numberOfLines={1} {...rest} style={[ style, { opacity: animating ? 0 : 1 }]}>\n          {children}\n        </Text>\n        <ScrollView\n          ref={c => (this.containerRef = c)}\n          style={StyleSheet.absoluteFillObject}\n          display={animating ? 'flex' : 'none'}\n          showsHorizontalScrollIndicator={false}\n          horizontal\n          scrollEnabled={false}\n          onContentSizeChange={() => this.calculateMetrics()}\n        >\n          <Animated.Text\n            ref={c => (this.textRef = c)}\n            numberOfLines={1}\n            {...rest}\n            style={[style, { transform: [{ translateX: this.animatedValue }], width: null }]}\n          >\n            {children}\n          </Animated.Text>\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}